xtable2kable() %>%
column_spec(1, color = "red")
library(knitr)
library(kableExtra)
dt <- mtcars[1:5, 1:6];kable(dt) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
kable(dt) %>%
kable_styling(bootstrap_options = c(border="solid"))
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "latex", class = "knitr_kable")
}
xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "html", class = "knitr_kable")
}
xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "latex", class = "knitr_kable")
}
xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "latex", class = "knitr_kable")
}
a<-xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
a
a
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
example(regby)
library(StatTools)
library(StatTools)
library(StatTools)
#regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
a<-regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
a
a<-regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
tab<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial)
)
sum1<-lapply(tab, summary)
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
sink(file=NULL)
Pred<-lapply(ES, row.names)
Pred
sink()
Pred<-lapply(ES, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
xx<-simplify2array(ES)
Pred<-rep(row.names(xx), length(sum1))
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(sum1, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
ES<-lapply(sum1, coef)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
xx<-simplify2array(ES)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx$coefficients, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx["coefficients", row.names)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx["coefficients"], row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx["coefficients",], row.names)
Pred
Pred<-rep(row.names(xx), length(sum1))
Pred
es<-purrr::map(ES, data.frame)
dt<-simplify2array(es)
estimate<-dt[1,]
Pred<-matrix(pred, ncol=1)
pred<-lapply(xx["coefficients",], row.names)
Pred<-matrix(pred, ncol=1)
Pred
Pred<-unlist(matrix(pred, ncol=1))
Pred
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Starta<-rep(names(REG), length(Pred))
Starta
length(Pred)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Strata<-rep(names(REG), length(Pred))
Pred
pred<-lapply(ES, row.names)
Pred<-matrix(unlist(pred), ncol=1)
Pred
pred<-lapply(ES, row.names)
pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(sum1, row.names)
Strata<-rep(names(REG), length(Pred))
Pred
Pred<-lapply(ES, row.names)
Strata<-rep(names(REG), length(Pred))
Strata<-rep(names(REG), length(Pred))
Pred
ES<-simplify2array(sum1)
xx<-ES["coefficients",]
Pred<-lapply(xx, row.names)
Strata<-rep(names(REG), length(Pred))
Pred
Pred<-unlist(pred)
Pred
Pred<-unlist(matrix(pred, ncol=1))
Strata<-rep(names(REG), length(Pred))
Pred
ES
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
library(StatTools)
a<-browsable(example(regby))
library(htmltools)
a<-browsable(example(regby))
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
rstudio::viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
library(knitr)
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
rstudio::viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
install.packages(rstudio)
install.packages("rstudio")
library(rstudio)
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
rstudio::viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
view(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
library(rstudioapi)
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
view(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
view_kable <- function(x, ...){
tab <- paste(capture.output(kable(head(mtcars), ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
view_kable <- function(x, ...){
tab <- paste(capture.output(kableExtra::kable_styling(kable(head(mtcars), ...))), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
view_kable <- function(x, ...){
tab <- paste(capture.output(kableExtra::kable_styling(kable(head(mtcars),format="html", ...))), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "class=nofluid")
view_kable <- function(x, ...){
tab <- paste(capture.output(kableExtra::kable_styling(kable(head(mtcars), ...))), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
viewer(tf)
}
view_kable(head(df[,1:9]), format = 'html', table.attr = "css")
view_kable <- function(x, ...){
tab <- paste(capture.output(kableExtra::kable_styling(kable(head(mtcars), ...))), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
viewer(tf)
}
view_kable(head(df[,1:9]), format = 'rst', table.attr = "css")
print.htmlTable<- function(x, useViewer = TRUE, ...){
# Don't use viewer if in knitr
if (useViewer &&
!"package:knitr" %in% search()){
htmlFile <- tempfile(fileext=".html")
htmlPage <- paste("<html>",
"<head>",
"<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">",
"</head>",
"<body>",
"<div style=\"margin: 0 auto; display: table; margin-top: 1em;\">",
x,
"</div>",
"</body>",
"</html>", sep="\n")
cat(htmlPage, file=htmlFile)
viewer <- getOption("viewer")
if (!is.null(viewer) &&
is.function(viewer)){
# (code to write some content to the file)
viewer(htmlFile)
}else{
utils::browseURL(htmlFile)
}
}else{
cat(x)
}
}
print.htmlTable(head(mtcars))
print.htmlTable(mtcars)
viewer <- getOption("viewer")
viewer(head(mtcars))
tempDir <- tempfile()
dir.create(tempDir)
htmlFile <- file.path(tempDir, "index.html")
viewer(head(mtcars))
knitr::knit2html('readme.RMD', stylesheet = 'flat-table.css')
knitr::kable(head(mtacrs))
knitr::kable(head(mtcars))
viewer(knitr::kable(head(mtcars)))
knit_rd("StatTools")
set_header(tikz = '\\usepackage{tikz}
')
viewer(knitr::kable(head(mtcars)))
knitr::kable(head(mtcars))
knitr::kable(head(mtcars, 10))
getwd()
knitr::kable(head(mtcars), theme=getwd(/inst/extdata/mycss.css))
knitr::kable(head(mtcars), theme="/C:/Users/ddibaba/Git/StatTools/inst/extdata/mycss.css"))
knitr::kable(head(mtcars), theme="/C:/Users/ddibaba/Git/StatTools/inst/extdata/mycss.css")
knitr::kable(head(mtcars), theme="C:/Users/ddibaba/Git/StatTools/inst/extdata/style.css")
knitr::kable(head(mtcars), format="html", theme="C:/Users/ddibaba/Git/StatTools/inst/extdata/style.css")
knitr::kable(head(mtcars), format="html", theme="C:/Users/ddibaba/Git/StatTools/inst/extdata/style.css")
knit_rd(maps)
knit_rd("maps")
library(knitr)
knit_rd("maps")
int<-exp( 1.88955 )
m<-exp(2*-0.02303)
int+m
exp(1.88955+2*-0.02303)
library(StatTools)
knit_rd("StatTools")
library(StatTools)
knit_rd("StatTools", comment="")
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
str(example(regby))
library(StatTools)
tt <- example(regby)
tt <- example(regby);
str(tt)
str(tt)
View(tt)
View(tt)
find.package("StatTools")
find.package("caret")
find.package("dplyr")
sink()
find.package("dplyr")
