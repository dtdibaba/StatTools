kable(mtcars[1:5, 1:5], "html", booktabs="TRUE")%>%row_spec(1:6,extra_css = mycss)
kable(mtcars[1:5, 1:5], "html", booktabs="TRUE")%>%row_spec(1:5,extra_css = mycss)
kable(mtcars[1:5, 1:5], "html", booktabs="TRUE")%>%row_spec(1:5,border=T)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_right_border(2:5, everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
install.packages("huxtable")
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_right_border(2:5, everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_top_border(2:5, everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_top_border(2:8, everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_top_border(2:7, everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_top_border(2:6, everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = TRUE) %>%
set_top_border(c(1, 6), everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = FALSE) %>%
set_top_border(c(1, 6), everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = T) %>%
set_top_border(c(1, 6), everywhere, 0.4) %>%
set_bottom_border(1, everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6], add_colnames = T) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,6), everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:5, 1:6]) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,6), everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[2:5, 1:6]) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,6), everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[2:5, 1:6]) %>%
set_top_border(c(2), everywhere, 0.4) %>%
set_bottom_border(c(2,6), everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:4, 1:6]) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,5), everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:4, 1:5]) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,5), everywhere, 0.4)
example(huxtable)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:4, 1:5]) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,5), everywhere, 0.4)
library(huxtable)
library(dplyr)
as_hux(mtcars[1:4, 1:5], add_colnames = T) %>%
set_top_border(c(1), everywhere, 0.4) %>%
set_bottom_border(c(1,5), everywhere, 0.4)
mytheme <- function (ht) {
ht <- set_all_borders(ht, 0.4)
ht <- set_all_border_colors(ht,
"darkgreen")
ht <- set_background_color(ht,
evens, odds, "salmon")
ht
}
options(huxtable.knit_print_df_theme
= mytheme)
# groovy!
data.frame(
a = 1:5,
b = 1:5
)
knit()
example(knit)
knitr::opts_chunk$set(echo = TRUE)
%>%kable_styling(position="left", full_width = FALSE)
example(knit)
options(huxtable.knit_print_df_theme
= mytheme)
# groovy!
data.frame(
a = 1:5,
b = 1:5
)
options(huxtable.knit_print_mydata_theme
= mytheme)
# groovy!
data.frame(
a = 1:5,
b = 1:5
)
options(huxtable.knit_print_mydata_theme
= mytheme)
# groovy!
mydata<-data.frame(
a = 1:5,
b = 1:5
)
mydata
knit_print(mydata)
options("huxtable.knitr_output_format="html")
options("huxtable.knitr_output_format"="html")
knit_print(mydata)
options("huxtable.knitr_output_format"="docx")
knit_print(mydata)
install.packages("flextable")
knit_print(mydata)
library(flextable)
knit_print(mydata)
options("huxtable.knitr_output_format"="markdown")
knit_print(mydata)
options("huxtable.knitr_output_format"="screen")
knit_print(mydata)
options("huxtable.knitr_output_format"="html")
knit_print(mydata)
options("huxtable.knitr_output_format"="")
knit_print(mydata)
options("huxtable.knitr_output_format"="pptx")
knit_print(mydata)
library(flextable)
install.packages("zip")
library(zip)
library(flextable)
options("huxtable.knitr_output_format"="pptx")
knit_print(mydata)
head(mtcars)
kable(head(mtcars))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(extra_css = list("border-top"="1px double solid"))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(extra_css = list(1,"border-top"="1px double solid"))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(1,extra_css = list("border-top"="1px double solid"))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(6,extra_css = list("border-bottom"="1px double solid"))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(7,extra_css = list("border-bottom"="1px double solid"))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(6,extra_css = list("border-bottom"="1px double solid"), hline_after = T)
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(6,extra_css = list("border-bottom"="1px double solid"), hline_bottom(head(mtcars)))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(6,extra_css = list("border-bottom"="1px double solid"), hline_after=T))
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(6,extra_css = list("border-bottom"="1px double solid"), hline_after=T)
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%row_spec(6,extra_css = ("border"="1px double solid"), hline_after=T)
kable(head(mtcars))%>%kable_styling(bootstrap_options = "condensed")%>%th_spec(6,extra_css = ("border"="1px double solid"), hline_after=T)
xtable::xtable(mtcars[1:4, 1:4], caption = "Hello xtable") %>%
xtable2kable() %>%
column_spec(1, color = "red")
library(knitr)
library(kableExtra)
dt <- mtcars[1:5, 1:6];kable(dt) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
kable(dt) %>%
kable_styling(bootstrap_options = c(border="solid"))
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "latex", class = "knitr_kable")
}
xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "html", class = "knitr_kable")
}
xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "latex", class = "knitr_kable")
}
xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
library(kableExtra)
library(xtable)
xtable2kable <- function(x) {
out <- capture.output(print(x, table.placement = NULL))[-(1:2)]
out <- paste(out, collapse = "\n")
structure(out, format = "latex", class = "knitr_kable")
}
a<-xtable(cars[1:5,1:2], caption = "Test") %>%
xtable2kable() %>%
kable_styling(position = "float_right")
a
a
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
example(regby)
library(StatTools)
library(StatTools)
library(StatTools)
#regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
a<-regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
a
a<-regby(datain=data1, byVar='cat',
frmlYX=formula(y~x+z),
fam=binomial,
Model="glm",
Pred=c("Intercept",
"X","Zb",
"Zc", "Zd"),  colname=c("Strata", "Variable", "OR(95%CIs)", "P-value" ),
Factor=TRUE, Intercept=FALSE, EXP=TRUE)
tab<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial)
)
sum1<-lapply(tab, summary)
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
sink(file=NULL)
Pred<-lapply(ES, row.names)
Pred
sink()
Pred<-lapply(ES, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
xx<-simplify2array(ES)
Pred<-rep(row.names(xx), length(sum1))
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(sum1, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
ES<-lapply(sum1, coef)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Pred
xx<-simplify2array(ES)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx$coefficients, row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx["coefficients", row.names)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx["coefficients"], row.names)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(xx["coefficients",], row.names)
Pred
Pred<-rep(row.names(xx), length(sum1))
Pred
es<-purrr::map(ES, data.frame)
dt<-simplify2array(es)
estimate<-dt[1,]
Pred<-matrix(pred, ncol=1)
pred<-lapply(xx["coefficients",], row.names)
Pred<-matrix(pred, ncol=1)
Pred
Pred<-unlist(matrix(pred, ncol=1))
Pred
library(StatTools)
example(regby)
library(StatTools)
example(regby)
library(StatTools)
example(regby)
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Starta<-rep(names(REG), length(Pred))
Starta
length(Pred)
Pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(ES, row.names)
Strata<-rep(names(REG), length(Pred))
Pred
pred<-lapply(ES, row.names)
Pred<-matrix(unlist(pred), ncol=1)
Pred
pred<-lapply(ES, row.names)
pred
set.seed(123896)
requireNamespace("htmlTable",quietly=TRUE)
x=rnorm(100)
z=sample(letters[1:4], 100, TRUE)
R<-c('B', 'W')
cat<-sample(R, 100, TRUE)
y=rbinom(100, 1, 0.5)
data1<-data.frame(x=x,z=z, cat=cat, y=y )
REG<-by(data1, data1[, "cat"], function(x)glm(y~x+x+z, data=x, family=binomial))
sum1<-lapply(REG, summary)
ES<-simplify2array(sum1)
Pred<-lapply(sum1, row.names)
Strata<-rep(names(REG), length(Pred))
Pred
Pred<-lapply(ES, row.names)
Strata<-rep(names(REG), length(Pred))
Strata<-rep(names(REG), length(Pred))
Pred
ES<-simplify2array(sum1)
xx<-ES["coefficients",]
Pred<-lapply(xx, row.names)
Strata<-rep(names(REG), length(Pred))
Pred
Pred<-unlist(pred)
Pred
Pred<-unlist(matrix(pred, ncol=1))
Strata<-rep(names(REG), length(Pred))
Pred
ES
library(StatTools)
example(regby)
library(StatTools)
example(regby)
